# serverless.yml
plugins:

  - serverless-offline
  - serverless-dynamodb-local


service: my-express-application


custom:

  tableName: 'users-table-${self:provider.stage}'

  dynamodb:
    start:
      port: 8000
     # inMemory: true
      #heapInitial: 200m
      #heapMax: 1g
      migrate: true
     # seed: true
     # convertEmptyValues: true
    # Uncomment only if you already have a DynamoDB running locally
    # noStart: true



provider:

  name: aws

  runtime: nodejs6.10

  stage: dev

  region: us-east-1

  iamRoleStatements:

    - Effect: Allow

      Action:

        - dynamodb:Query

        - dynamodb:Scan

        - dynamodb:GetItem

        - dynamodb:PutItem

        - dynamodb:UpdateItem

        - dynamodb:DeleteItem

      Resource:

        - { "Fn::GetAtt": ["UsersDynamoDBTable", "Arn" ] }

  environment:

    USERS_TABLE: ${self:custom.tableName}


functions:

  app:

    handler: index.handler

    events:

      - http: ANY /

      - http: 'ANY {proxy+}'


resources:

  Resources:

    UsersDynamoDBTable:

      Type: 'AWS::DynamoDB::Table'

      Properties:

        AttributeDefinitions:

          -

            AttributeName: userId

            AttributeType: S

        KeySchema:

          -

            AttributeName: userId

            KeyType: HASH

        ProvisionedThroughput:

          ReadCapacityUnits: 1

          WriteCapacityUnits: 1

        TableName: ${self:custom.tableName}

